% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{Model}
\alias{Model}
\title{An R6 class for a model}
\description{
A Model specifies how a model looks like, prepares the data, fits it,
stores it and predicts from it.
}
\seealso{
\code{\link[=training_camp]{training_camp()}}.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{A telling name for the model.}

\item{\code{directory}}{Store/find the models in this directory.}

\item{\code{fitter}}{The model fitting function to be used.}

\item{\code{split_index}}{Split the given data into training and test cohort
\code{length(split_index)} times.}

\item{\code{time_cutoffs}}{Threshold and censor the outcome accordingly.}

\item{\code{hyperparams}}{Optional arguments passed to \code{fitter}.}

\item{\code{response_type}}{The type of response to be used.}

\item{\code{response_colnames}}{Use as column names for the response matrix.}

\item{\code{include_from_continuous_pheno}}{The names of the continuous variables in the
pheno data (to be) included in the predictor matrix.}

\item{\code{include_from_discrete_pheno}}{The names of the discrete variables in the
pheno data (to be) included in the predictor matrix.}

\item{\code{include_expr}}{Whether to include the expression data in the predictor matrix.}

\item{\code{li_var_suffix}}{Append this to the names of features from the pheno data
when adding them to the predictor matrix.}

\item{\code{create_directory}}{Whether to create \code{directory} if it does not exist, yet.}

\item{\code{plot_file}}{Store the plots resulting from \code{plot(fit_obj)} in \code{directory} under
this name.}

\item{\code{plot_ncols}}{Arrange the above mentioned plots in this number of columns.}

\item{\code{plot_title_line}}{Pass this as the \code{line} argument to \code{\link[graphics:title]{graphics::title()}}
when calling \code{plot(fit_obj)}.}

\item{\code{fit_file}}{Store this Model object under this name in \code{directory}.}

\item{\code{fits}}{A list holding fits (e.g. zeroSum objects).}

\item{\code{continuous_output}}{Whether the output of the model is continous or binary.}

\item{\code{combine_n_max_categorical_features}}{Maximum number of categorical features
to combine}

\item{\code{combined_feature_min_positive_ratio}}{Minimum ratio of positive
observations in a combined (categorical) feature}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Model-new}{\code{Model$new()}}
\item \href{#method-Model-fit}{\code{Model$fit()}}
\item \href{#method-Model-predict}{\code{Model$predict()}}
\item \href{#method-Model-at_time_cutoff}{\code{Model$at_time_cutoff()}}
\item \href{#method-Model-clone}{\code{Model$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Model-new"></a>}}
\if{latex}{\out{\hypertarget{method-Model-new}{}}}
\subsection{Method \code{new()}}{
Create a new Model instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$new(
  name,
  fitter,
  directory,
  split_index,
  time_cutoffs,
  hyperparams = NULL,
  response_type = c("binary", "survival_censored"),
  response_colnames = c("time", "status"),
  include_from_continuous_pheno = NULL,
  include_from_discrete_pheno = NULL,
  include_expr = TRUE,
  li_var_suffix = "++",
  create_directory = TRUE,
  plot_file = "training_error.pdf",
  plot_ncols = 2,
  plot_title_line = 2.5,
  fit_file = "models.rds",
  continuous_output = NULL,
  combine_n_max_categorical_features = 1L,
  combined_feature_min_positive_ratio = 0.04
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{string. A telling name for the model.}

\item{\code{fitter}}{function. The model fitting function to be used. Must take \code{x} and
\code{y} as first two positional arguments. Further arguments can be passed via
\code{hyperparams} (below). Its return value must be an S3 object with a \code{plot()}
method, and (ideally, for assessment) with a \code{predict()} method. Default is \code{NULL}.}

\item{\code{directory}}{string. The directory to store the models in. For every value in
\code{time_cutoffs}, find the corresponding model in a subdirectory named after this value.}

\item{\code{split_index}}{integer vector. Split the given data into training and test samples
\code{length(split_index)} times, i.e., every index in \code{split_index} will get its own split.}

\item{\code{time_cutoffs}}{numeric vector.
\itemize{
\item If \code{response_type == "survival_censored"}: For every value in \code{time_cutoffs}, censor
all patients where the event ouccured after \code{time_cutoffs} at this value and train the
specified model.
\item If \code{response_type == "binary"}: For every value in \code{time_cutoffs}, binarize the
outcome depending on whether it occured before or after this value, and train the
specified model.
}}

\item{\code{hyperparams}}{list. Optional arguments passed to \code{fitter}, e.g. alpha
in case of an elastic net. Default is \code{list()}, i.e., no arguments other than \code{x}, \code{y}
passed to \code{fitter}.}

\item{\code{response_type}}{string. The type of response to be used. One of \code{"binary"} or
\code{"survival_censored"}. Default is \code{NULL}.}

\item{\code{response_colnames}}{string vector of length 2. If \code{response_type == "survival_censored"},
use as column names for the response matrix.
\itemize{
\item The first element is the name of the column holding the time until the event or
censoring, and
\item the second one is the anme of the column holding the event status (1 = event, 0 =
censoring).
}}

\item{\code{include_from_continuous_pheno}}{vector of strings. The names of the
\emph{continuous} variables in the pheno data (to be) included in the predictor matrix. The
values will be coerced to numeric. Default is \code{NULL}, which means no continuous pheno
variables are or will be included.}

\item{\code{include_from_discrete_pheno}}{vector of strings. The names of the \emph{discrete}
variables in the pheno data (to be) included in the predictor matrix. A discrete
variable with n levels will be converted to n-1 binary variables. Default is \code{NULL},
which means no discrete pheno variables are or will be included.}

\item{\code{include_expr}}{logical. Whether to include the expression data in the predictor
matrix.}

\item{\code{li_var_suffix}}{string. Append this to the names of features from the pheno
data when adding them to the predictor matrix. Default is \code{"++"}.}

\item{\code{create_directory}}{logical. Whether to create \code{directory} if it does not exist, yet.
Default is \code{TRUE}.}

\item{\code{plot_file}}{string. Store the plot resulting from \code{plot(fit_obj)} in \code{directory}
under this name. Default is \code{"training_error.pdf"}.}

\item{\code{plot_ncols}}{integer. The number of columns in the plot. Default is \code{2}.}

\item{\code{plot_title_line}}{numeric or NULL. Pass this as the \code{line} argument to \code{\link[graphics:title]{graphics::title()}}
after calling \code{plot(fit_obj)}. This is the distance (in inches) between the title text and
the upper limit of the figure. Default is \code{2.5}.}

\item{\code{fit_file}}{string. The name of the model-fits file inside \code{directory}.
Default is \code{"fit_obj.rds"}.}

\item{\code{continuous_output}}{logical or NULL. Whether the output of the model
is continous (like the conditional probabilities of a logistic regression) or
binary (like with a random forest). This piece of information is helpful
when it comes to assessing a model (Ass2d$assess_center() uses it, e.g.).}

\item{\code{combine_n_max_categorical_features}}{integer. Maximum number of categorical features
to combine in predicting features.}

\item{\code{combined_feature_min_positive_ratio}}{numeric. Minimum ratio of positive
observations in a combined (categorical) feature. This attribute together
with \code{combine_n_max_categorical_features} governs which combinatorial
features the predicitor matrix will contain.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Strictly speaking, one \code{Model} instance specifies
\code{length(time_cutoffs) * length(split_index)} models. In terms of storing
and assessing models, we consider the models obtained via repeated
splitting according to \code{split_index} as one model; we view models
obtained via different values of \code{time_cutoffs}, in contrast, as
different models; e.g., we can compare them against one another in an
assessment.
}

\subsection{Returns}{
A \code{Model} R6 object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Model-fit"></a>}}
\if{latex}{\out{\hypertarget{method-Model-fit}{}}}
\subsection{Method \code{fit()}}{
Fit the model to a data set for all splits into training
and test cohort. However, we do not support multiple time
cutoffs at this step; enabling them is the job of \code{\link[=training_camp]{training_camp()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$fit(data, quiet = FALSE, msg_prefix = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Data object. Read it in if needed.}

\item{\code{quiet}}{logical. Whether to suppress messages. Default is \code{FALSE}.}

\item{\code{msg_prefix}}{string. Prefix for messages. Default is \code{""}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method expects the \code{Model} object to have a single time
cutoff and the \code{directory} field be set accordingly. You may therefore
want to apply the \code{at_time_cutoff()} method to the \code{Model} object before.
}

\subsection{Returns}{
The \code{Model} object itself with the \code{fits} attribute set to a
list holding the object returned by the \code{fitter} attribute for every
split.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Model-predict"></a>}}
\if{latex}{\out{\hypertarget{method-Model-predict}{}}}
\subsection{Method \code{predict()}}{
Predict for a data set and all splits into training and
test cohort. We don't support multiple time cutoffs here. Additonally
return the true values of the response and, if the \code{benchmark_col}
attribute of the \code{Data} object is not \code{NULL}, the values of the
benchmark.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$predict(data, quiet = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Data object. Specifications on the data. Read it in if
needed.}

\item{\code{quiet}}{logical. Whether to suppress messages. Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list holding:
\itemize{
\item \code{"predicted"}: a list of named numeric vectors, the scores output by the model for
each split (split index corresponding to list index).
\item "actual": a list of named numeric vectors, for each split the actual values of
whether time to event was above or below \code{model$time_cutoffs}, encoded as 1
("high risk") and 0 ("low risk"), respectively.
\item "benchmark": A list of named numeric vectors, for each split the values of the
benchmark classifier. If \code{data$benchmark} is NULL, it is an empty list.
}

For every split, the names of all three vectors match.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Model-at_time_cutoff"></a>}}
\if{latex}{\out{\hypertarget{method-Model-at_time_cutoff}{}}}
\subsection{Method \code{at_time_cutoff()}}{
Infer the model at a specific time cutoff.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$at_time_cutoff(time_cutoff)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{time_cutoff}}{numeric. The time cutoff to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Model-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Model-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
