% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested_cv.R
\name{nested_cv_oob}
\alias{nested_cv_oob}
\title{Nested cross-validation for second-stage OOB predictions}
\usage{
nested_cv_oob(
  x,
  y,
  fitter1,
  fitter2,
  hyperparams1,
  hyperparams2,
  n_folds,
  append_to_includes,
  pseudo_cv = TRUE
)
}
\arguments{
\item{x}{A numeric matrix holding the predictor features: rows are samples and
columns are features.}

\item{y}{A numeric vector holding the response variable.}

\item{fitter1}{A function that fits the early model. It must be able to perform
a cross validation and return an S3 class with
\itemize{
\item a \code{cv_predict} attribute, a list of vectors, for every lambda the
cross-validated predictions.
\item a \code{lambda} attribute, a numeric vector holding the lambda values, and
\item a \code{predict} method.
}}

\item{fitter2}{A function that fits the late model. It must return an S3 object
with a \code{predict} method.}

\item{hyperparams1}{A named list with hyperpamaters we will pass to \code{fitter1}
to obtain cross-validated predictions from the early model.}

\item{hyperparams2}{A named list with hyperparameters for the late model.
Unlike \code{hyperparams1}, we call \code{fitter2} for every combination of values in
\code{hyperparams2} and lambda value from \code{fitter1}.}

\item{n_folds}{An integer specifying the number of folds for the cross-validation.}

\item{append_to_includes}{A character string to filter columns in \code{x} we
provide to the late model as predictors: all columns with names matching
\code{append_to_includes} as a regular expression.}

\item{pseudo_cv}{A logical indicating whether we use pseudo cross-validation.
I.e., \code{fitter1} performs one \code{n_folds} cross validation, get a new training
set by replacing \code{fitter1}'s input features by the cross-validated predictions
and procede with model fitting and getting out-of-bag predictions. This a is
not real independent testing since the OOB prediction for a given sample
according to \code{fitter2} involves a model that saw the sample during training.
Yet, this pseudo method saves us a factor of \code{n_folds} in computational time
compared to a classical nested cross-validation. The latter will follow in
future versions soon.}
}
\value{
An S3 object with class \code{nested_fit}, the model with the best
performance according to the out-of-bag (OOB) predictions based on cross-validated
predictions from the early model.
}
\description{
Perform a nested cross-validation for a late-integration scheme,
i.e., perform a cross-validation for the early model and then train second-stage
models on cross-validated predictions and evaluate the entire models via
out-of-bag (OOB) predictions of the second-stage models (usually a random
forest).
}
\details{
This function does hyperparameter tuning for a nested model, i.e.,
a so-called early model makes predictions from the high-dimensional part of
data (e.g. RNA-seq, Nanostring). We then provide these predictions as a
one-dimensional continuous feature together with new features to a late model
\emph{that enables a performance estimate via out-of-bag (OOB) predictions
(typically a random forest)}.
}
